plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id "com.github.spotbugs" version "6.0.7"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.auth0:java-jwt:4.0.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    spotbugsPlugins 'com.mebigfatguy.sb-contrib:sb-contrib:7.6.4'

}

checkstyle {
    configFile file('./src/main/resources/checkstyle.xml')
    toolVersion = '10.0'
    ignoreFailures = false
    maxWarnings = 0
}

pmd {
    consoleOutput = true
    ignoreFailures = false
    toolVersion = "6.43.0"
    ruleSetFiles = files("/src/main/resources/pmd.xml")
}

spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    excludeFilter = file("/src/main/resources/excludeFilter.xml")
}


tasks.named('test') {
    useJUnitPlatform()
}
tasks.register('installLocalGitHook', Copy) {
    from new File(rootProject.rootDir, 'scripts/pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0775
}

tasks.spotbugsMain {
    reports.create("html") {
        required = true
        outputLocation = file("$buildDir/reports/spotbugs/spotbugs.html")
        setStylesheet("fancy-hist.xsl")
    }
    reports.create("xml") {
        required = true
        outputLocation = file("$buildDir/reports/spotbugs/spotbugs.xml")
    }
}
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
build.dependsOn installLocalGitHook
